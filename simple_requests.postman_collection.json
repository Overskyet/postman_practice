{
	"info": {
		"_postman_id": "a4c3741f-43fc-48eb-b1c3-b965aa62c50e",
		"name": "Group19",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"// var myToken = pm.collectionVariables.get(\"auth_token\");",
							"",
							"// if (myToken == null) {",
							"//     pm.collectionVariables.set(\"auth_token\", jsonData.token);",
							"// } else {",
							"//     pm.collectionVariables.unset(\"auth_token\");",
							"//     pm.collectionVariables.set(\"auth_token\", jsonData.token);",
							"// }",
							"pm.collectionVariables.set(\"auth_token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "str",
							"type": "text"
						},
						{
							"key": "password",
							"value": "str",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"u_age\": {\"type\": \"integer\"},",
							"                \"u_name\": {\"type\": \"array\"},",
							"                \"u_salary_1_5_year\": {\"type\": \"integer\"}",
							"            },",
							"            \"required\": [\"u_age\", \"u_name\", \"u_salary_1_5_year\"]",
							"        },",
							"        \"qa_salary_after_12_months\": {\"type\": \"number\"},",
							"        \"qa_salary_after_6_months\": {\"type\": \"integer\"},",
							"        \"start_qa_salary\": {\"type\": \"integer\"}",
							"    },",
							"    \"required\": [\"person\", \"qa_salary_after_12_months\", \"qa_salary_after_6_months\", \"start_qa_salary\"]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Coefficient is valid\", function () {",
							"    var base_salary = jsonData.start_qa_salary;",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(base_salary * 2);",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(base_salary * 2.9);",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(base_salary * 4);",
							"});",
							"",
							"pm.collectionVariables.set(\"salary\", jsonData.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": {{age}},\n    \"salary\": 500,\n    \"name\": \"{{name}}\",\n    \"auth_token\": \"{{auth_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user_info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {\"type\": \"integer\"},",
							"        \"name\": {\"type\": \"string\"},",
							"        \"salary\": {\"type\": \"array\"}",
							"    },",
							"    \"required\": [\"age\", \"name\", \"salary\"]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Coefficient is valid\", function () {",
							"    var base_salary = jsonData.salary[0];",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(base_salary * 2);",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(base_salary * 3);",
							"});",
							"",
							"pm.test(\"Last salary item is greater than others\", function () {",
							"    var salary_0 = jsonData.salary[0];",
							"    var salary_1 = jsonData.salary[1];",
							"    var salary_2 = jsonData.salary[2];",
							"    pm.expect(Number(salary_2)).to.be.above(salary_0);",
							"    pm.expect(Number(salary_2)).to.be.above(Number(salary_1));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/new_data",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {\"type\": \"integer\"},",
							"        \"daily_food\": {\"type\": \"number\"},",
							"        \"daily_sleep\": {\"type\": \"number\"},",
							"        \"name\": {\"type\": \"string\"}",
							"    },",
							"    \"required\": [\"age\", \"daily_food\", \"daily_sleep\", \"name\"]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Coefficient is valid\", function () {",
							"    var pet_weight = pm.collectionVariables.get(\"pet_weight\");",
							"    pm.expect(jsonData.daily_food).to.eql(pet_weight * 0.012);",
							"    pm.expect(jsonData.daily_sleep).to.eql(pet_weight * 2.5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "6",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "{{pet_weight}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Roy",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/test_pet_info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {\"type\": \"string\"},",
							"        \"family\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"children\": {\"type\": \"array\"},",
							"                \"u_salary_1_5_year\": {\"type\": \"integer\"}",
							"            },",
							"            \"required\": [\"children\", \"u_salary_1_5_year\"]",
							"        },",
							"        \"name\": {\"type\": \"string\"},",
							"        \"salary\": {\"type\": \"integer\"},",
							"    },",
							"    \"required\": [\"age\", \"family\", \"name\", \"salary\"]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test('Request value \"name\" is equal to response value \"name\"', function () {",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"name\"));",
							"});",
							"",
							"pm.test('Request value \"age\" is equal to response value \"age\"', function () {",
							"    pm.expect(jsonData.age).to.eql(pm.collectionVariables.get(\"age\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/get_test_user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var rnd_currency = jsonData[Math.floor(Math.random() * (Object.keys(jsonData).length - 1))];",
							"",
							"pm.collectionVariables.set(\"cur_id\", rnd_currency.Cur_ID);",
							"",
							"//**************",
							"const base_url = pm.collectionVariables.get(\"base_url\");",
							"const auth_token = pm.collectionVariables.get(\"auth_token\");",
							"const currencies = Object.keys(jsonData).length - 1;",
							"",
							"for (var x = 0; x <= currencies; x++) {",
							"",
							"    var curr_code = jsonData[x].Cur_ID;",
							"",
							"    var echoPostRequest = {",
							"        url: base_url + '/curr_byn',",
							"        method: 'POST',",
							"        header: 'User-Agent: PostmanRuntime/7.26.8, Accept: */*, Accept-Encoding: gzip, deflate, br, Connection: keep-alive',",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({ auth_token: auth_token, curr_code:  curr_code})",
							"        }",
							"    };",
							"    ",
							"    pm.sendRequest(echoPostRequest, function (err, res) {",
							"",
							"        if (err) { console.log(err); }",
							"",
							"        // pm.test('response should be okay to process', function () {",
							"        //     pm.expect(err).to.equal(null);",
							"        //     pm.expect(res).to.have.property('code', 200);",
							"        //     pm.expect(res).to.have.property('status', 'OK');",
							"        // });",
							"        console.log(res.status)",
							"        // if (pm.response.code == 200) {",
							"        //     console.log(\"code 200\");",
							"        // } else if (pm.response.code == 500) {",
							"        //     console.log(\"code 500\");",
							"        // }",
							"",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/currency",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"Cur_Abbreviation\": {\"type\": \"string\"},",
							"        \"Cur_ID\": {\"type\": \"integer\"},",
							"        \"Cur_Name\": {\"type\": \"string\"},",
							"        \"Cur_OfficialRate\": {\"type\": \"number\"},",
							"        \"Cur_Scale\": {\"type\": \"integer\"},",
							"        \"Date\": {\"type\": \"string\"}",
							"    },",
							"    \"required\": [\"Cur_Abbreviation\", \"Cur_ID\", \"Cur_Name\", \"Cur_OfficialRate\", \"Cur_Scale\", \"Date\"]",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{auth_token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{cur_id}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/curr_byn",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "base_url",
			"value": ""
		},
		{
			"key": "salary",
			"value": ""
		},
		{
			"key": "pet_weight",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "age",
			"value": ""
		},
		{
			"key": "cur_id",
			"value": ""
		}
	]
}